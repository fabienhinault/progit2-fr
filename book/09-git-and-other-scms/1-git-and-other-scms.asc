==Git et les autres systèmes

Le monde n'est pas parfait.
Habituellement, vous ne pouvez pas basculer immédiatement sous Git tous les projets que vous pourriez rencontrer.
Quelques fois, vous êtes bloqué sur un projet utilisant un autre VCS et vous souhaiteriez avoir Git.
Dans la première partie de ce chapitre, nous traiterons des moyens d'utiliser Git en tant que client quand vous travaillez sur un projet hébergé sur un autre système.

À un moment, il se peut que vous veuillez convertir votre projet à Git.
La seconde partie de ce chapitre traite de la migration de votre projet vers Git depuis certains systèmes, ainsi que de la méthode à suivre s'il n'existe aucun outil d'import.

=== Git en tant que client

(((Git as a client)))
C'est une expérience si agréable pour les développeurs d'utiliser Git, que de nombreuses personnes ont trouvé une façon de l'utiliser sur leur poste de travail, même si le reste de l'équipe utilisait un VCS totalement différent.
On peut trouver plusieurs de ces adapteurs, appelé « ponts » (_bridges_).
Nous allons voir ici ceux que vous avez le plus de chance de rencontrer.

include::sections/client-svn.asc[]

include::sections/client-hg.asc[]

include::sections/client-p4.asc[]

include::sections/client-tfs.asc[]

[[_migrating]]
=== Migrer vers Git

(((Migrating to Git)))
Si vous avez une base de code dans un autre VCS et que vous avez décidé d'utiliser Git, vous devez migrer votre projet d'une manière ou d'une autre.
Cette section traite de certains outils d'import pour les systèmes les plus répandus et montre comment développer votre propre outil.
Vous allez apprendre comment importer les données depuis plusieurs des SCM les plus importants utilisés en milieu professionnel, parce qu'ils constitue la majorité des utilisateurs qui effectuent ce changement, et parce que des outils de grande qualité sont facilement accessibles pour ces SCM.

include::sections/import-svn.asc[]

include::sections/import-hg.asc[]

include::sections/import-p4.asc[]

include::sections/import-tfs.asc[]

include::sections/import-custom.asc[]

=== Résumé

Vous devriez être à l'aise à l'utilisation de Git avec d'autres systèmes de contrôle de version, ou pour l'import de quasiment toutes les sortes de dépôts dans un nouveau Git sans perdre de données.
Dans le chapitre suivant, nous verrons les structures internes de Git pour vous permettre d'en retailler chaque octet, si le besoin s'en fait sentir.